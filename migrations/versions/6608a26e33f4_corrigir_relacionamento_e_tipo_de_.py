"""Corrigir relacionamento e tipo de coluna em SystemLog

Revision ID: 6608a26e33f4
Revises: dc6c2ec9f685
Create Date: 2025-07-31 17:58:22.228459

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '6608a26e33f4'
down_revision = 'dc6c2ec9f685'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('activity_log', schema=None) as batch_op:
        batch_op.alter_column('tabulation_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('action_type',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.drop_index(batch_op.f('ix_activity_log_lead_id'))
        batch_op.drop_index(batch_op.f('ix_activity_log_tabulation_id'))
        batch_op.drop_index(batch_op.f('ix_activity_log_user_id'))

    with op.batch_alter_table('background_task', schema=None) as batch_op:
        batch_op.alter_column('task_type',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('progress',
               existing_type=mysql.INTEGER(),
               nullable=True)

    with op.batch_alter_table('banco', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nome', sa.String(length=100), nullable=False))
        batch_op.create_unique_constraint(None, ['nome'])

    with op.batch_alter_table('convenio', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nome', sa.String(length=100), nullable=False))
        batch_op.create_unique_constraint(None, ['nome'])

    with op.batch_alter_table('grupo', schema=None) as batch_op:
        batch_op.alter_column('nome',
               existing_type=mysql.VARCHAR(length=120),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.drop_column('is_active')

    with op.batch_alter_table('layout_mailing', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_layout_mailing_produto_id'))

    with op.batch_alter_table('lead', schema=None) as batch_op:
        batch_op.alter_column('nome',
               existing_type=mysql.VARCHAR(length=150),
               nullable=False)
        batch_op.alter_column('nascimento',
               existing_type=mysql.VARCHAR(length=10),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('rmc',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('beneficio',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('logradouro',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('produto_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('ix_lead_data_criacao'))
        batch_op.drop_index(batch_op.f('ix_lead_nome'))
        batch_op.drop_index(batch_op.f('ix_lead_tabulation_id'))

    with op.batch_alter_table('lead_consumption', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lead_consumption_lead_id'))
        batch_op.drop_index(batch_op.f('ix_lead_consumption_user_id'))

    with op.batch_alter_table('proposta', schema=None) as batch_op:
        batch_op.add_column(sa.Column('lead_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('banco_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('convenio_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('situacao_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('tipo_operacao_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('valor_total', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('valor_parcela', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('prazo', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('data_proposta', sa.DateTime(), nullable=True))
        batch_op.create_foreign_key(None, 'situacao', ['situacao_id'], ['id'])
        batch_op.create_foreign_key(None, 'lead', ['lead_id'], ['id'])
        batch_op.create_foreign_key(None, 'tipo_de_operacao', ['tipo_operacao_id'], ['id'])
        batch_op.create_foreign_key(None, 'banco', ['banco_id'], ['id'])
        batch_op.create_foreign_key(None, 'convenio', ['convenio_id'], ['id'])

    with op.batch_alter_table('situacao', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nome', sa.String(length=100), nullable=False))
        batch_op.create_unique_constraint(None, ['nome'])

    with op.batch_alter_table('system_log', schema=None) as batch_op:
        batch_op.alter_column('action_type',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.drop_index(batch_op.f('ix_system_log_entity_type'))
        batch_op.drop_index(batch_op.f('ix_system_log_user_id'))

    with op.batch_alter_table('tabulation', schema=None) as batch_op:
        batch_op.alter_column('is_recyclable',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
        batch_op.alter_column('is_positive_conversion',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)

    with op.batch_alter_table('tipo_de_operacao', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nome', sa.String(length=100), nullable=False))
        batch_op.create_unique_constraint(None, ['nome'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=20),
               nullable=True)
        batch_op.alter_column('theme',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=20),
               nullable=True)
        batch_op.alter_column('grupo_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('wallet_limit',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('daily_pull_limit',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.drop_index(batch_op.f('ix_user_current_status'))
        batch_op.drop_index(batch_op.f('ix_user_grupo_id'))
        batch_op.drop_index(batch_op.f('ix_user_role'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_grupo_id'), ['grupo_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_current_status'), ['current_status'], unique=False)
        batch_op.alter_column('daily_pull_limit',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('wallet_limit',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('grupo_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('theme',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('role',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('tipo_de_operacao', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('nome')

    with op.batch_alter_table('tabulation', schema=None) as batch_op:
        batch_op.alter_column('is_positive_conversion',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
        batch_op.alter_column('is_recyclable',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)

    with op.batch_alter_table('system_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_system_log_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_system_log_entity_type'), ['entity_type'], unique=False)
        batch_op.alter_column('action_type',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               nullable=False)

    with op.batch_alter_table('situacao', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('nome')

    with op.batch_alter_table('proposta', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('data_proposta')
        batch_op.drop_column('prazo')
        batch_op.drop_column('valor_parcela')
        batch_op.drop_column('valor_total')
        batch_op.drop_column('tipo_operacao_id')
        batch_op.drop_column('situacao_id')
        batch_op.drop_column('convenio_id')
        batch_op.drop_column('banco_id')
        batch_op.drop_column('lead_id')

    with op.batch_alter_table('lead_consumption', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lead_consumption_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lead_consumption_lead_id'), ['lead_id'], unique=False)

    with op.batch_alter_table('lead', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lead_tabulation_id'), ['tabulation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lead_nome'), ['nome'], unique=False)
        batch_op.create_index(batch_op.f('ix_lead_data_criacao'), ['data_criacao'], unique=False)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('produto_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('logradouro',
               existing_type=sa.String(length=200),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('beneficio',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('rmc',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('nascimento',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=10),
               existing_nullable=True)
        batch_op.alter_column('nome',
               existing_type=mysql.VARCHAR(length=150),
               nullable=True)

    with op.batch_alter_table('layout_mailing', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_layout_mailing_produto_id'), ['produto_id'], unique=False)

    with op.batch_alter_table('grupo', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
        batch_op.alter_column('nome',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=120),
               existing_nullable=False)

    with op.batch_alter_table('convenio', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('nome')

    with op.batch_alter_table('banco', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('nome')

    with op.batch_alter_table('background_task', schema=None) as batch_op:
        batch_op.alter_column('progress',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.alter_column('task_type',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)

    with op.batch_alter_table('activity_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_activity_log_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_log_tabulation_id'), ['tabulation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_log_lead_id'), ['lead_id'], unique=False)
        batch_op.alter_column('action_type',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('tabulation_id',
               existing_type=mysql.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###
